#!/bin/sh

printf "Enter Username"
read USERNAME
printf "Enter Hostname (Name of the Computer)"
read HOSTNAME

lsblk
printf "Enter disk (Example: /dev/sda)"
read DISK

timedatectl set-ntp true

# Check if the system is booted as UEFI or Legacy BIOS
ls /sys/firmware/efi/efivars && EFI=true || EFI=false

printf "-- Partitioning Drive --"
if [ "$EFI" = true ]; then
	parted --script "${DISK}" \
	mklabel gpt \
	mkpart primary 512MiB -8GiB \
	mkpart primary linux-swap -8GiB 100% \
	mkpart ESP fat32 1MiB 512MiB \
	set 3 esp on
else
	parted --script "${DISK}" \
	mklabel msdos \
	mkpart primary 1MiB -8GiB \
	mkpart primary linux-swap -8GiB 100%
fi

printf "-- Making Filesysten --"
mkfs.ext4 -L arch "${DISK}1"
mkswap -L swap "${DISK}2"
swapon "${DISK}2"
if [ "$EFI" = true ]; then
	mkfs.fat -F 32 -n "UEFISYS" "${DISK}3" # (for UEFI systems only)
fi
mount "${DISK}1" /mnt
if [ "$EFI" = true ]; then
	mkdir -p /mnt/boot # (for UEFI systems only)
	mount "${DISK}3" /mnt/boot # (for UEFI systems only)
fi

printf "-- Installing Kernel and Base Software --"
pacstrap /mnt linux linux-firmware grub base base-devel sudo neovim networkmanager --noconfirm --needed
if [ "$EFI" = true ]; then
	pacstrap /mnt efibootmgr --noconfirm
fi

printf "-- Generating fstab --"
genfstab -U /mnt | tee -a /mnt/etc/fstab

printf "--Chroot--"
# Commands executed inside /mnt
cat << EOF | arch-chroot /mnt

printf "--Symlink Time--"
ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime

printf "--Hardware Clock--"
hwclock --systohc

printf "--Generating Locale--"
printf "en_US.UTF-8 UTF-8" | tee -a /etc/locale.gen
locale-gen
printf "LANG=en_US.UTF-8" | tee -a /etc/locale.conf

printf "--Setting Hostname--"
printf "${HOSTNAME}" | tee -a /etc/hostname

printf "--NetworkManager--"
systemctl enable --now NetworkManager && printf "--NetworkManager Working--" || printf "--NetworkManager not working--"

printf "ctrl_interface=/run/wpa_supplicant" | tee -a /etc/wpa_supplicant/wpa_supplicant.conf
printf "update_config=1" | tee -a /etc/wpa_supplicant/wpa_supplicant.conf

printf "--Creating User--"
useradd -mU "${USERNAME}"

printf "-- Enabling Sudo for ${USERNAME} --"
printf "%${USERNAME} ALL=(ALL) ALL" | tee -a /etc/sudoers

EOF

# If statements are not read in EOF so we have to move outside to install
# correct grub configuration
# EOF need to be not indented on end/closing line otherwise it causes error
printf "--Installing Grub--"
if [ "$EFI" = true ]; then
	cat << EOF | arch-chroot /mnt
	grub-install --efi-directory=/boot
EOF
else
	cat << EOF | arch-chroot /mnt
	grub-install "${DISK}"
EOF
fi
grub-mkconfig -o /boot/grub/grub.cfg

printf "All Done Hopefully It Works"
printf "Remember to arch-chroot /mnt and set passwd for root and ${USERNAME}"

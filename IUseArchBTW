#!/bin/bash

echo "Enter Username"
read USERNAME
echo "Enter Hostname (Name of the Computer)"
read HOSTNAME

lsblk
echo "Enter disk (Like: /dev/sda)"
read DISK

timedatectl set-ntp true

# Check if the system is booted as UEFI or Legacy BIOS
ls /sys/firmware/efi/efivars && EFI=true || EFI=false

echo "-- Partitioning Drive --"
if [ "$EFI" = true ]; then
	parted --script "${DISK}" \
	mklabel gpt \
	mkpart primary 512MiB -8GiB \
	mkpart primary linux-swap -8GiB 100% \
	mkpart ESP fat32 1MiB 512MiB \
	set 3 esp on
else
	parted --script "${DISK}" \
	mklabel msdos \
	mkpart primary 1MiB -8GiB \
	mkpart primary linux-swap -8GiB 100%
fi

echo "-- Making Filesysten --"
mkfs.ext4 -L arch "${DISK}1"
mkswap -L swap "${DISK}2"
swapon "${DISK}2"
if [ "$EFI" = true ]; then
	mkfs.fat -F 32 -n "UEFISYS" "${DISK}3" # (for UEFI systems only)
fi
mount "${DISK}1" /mnt
if [ "$EFI" = true ]; then
	mkdir -p /mnt/boot # (for UEFI systems only)
	mount "${DISK}3" /mnt/boot # (for UEFI systems only)
fi

echo "-- Installing Kernel and Base Software --"
pacstrap /mnt linux linux-firmware grub base base-devel sudo vim networkmanager --noconfirm --needed
if [ "$EFI" = true ]; then
	pacstrap /mnt efibootmgr --noconfirm
fi

echo "-- Generating fstab --"
genfstab -U /mnt >> /mnt/etc/fstab

echo "--Chroot--"
# Commands executed inside /mnt
cat << EOF | arch-chroot /mnt

echo "--Symlink Time--"
ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime

echo "--Hardware Clock--"
hwclock --systohc

echo "--Generating Locale--"
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen  
locale-gen
echo "LANG=en_US.UTF-8" >> /etc/locale.conf

echo "--Setting Hostname--"
echo "${HOSTNAME}" >> /etc/hostname

echo "--NetworkManager--"
systemctl enable --now NetworkManager && echo "--NetworkManager Working--" || echo "--NetworkManager not working--"

echo "ctrl_interface=/run/wpa_supplicant" >> /etc/wpa_supplicant/wpa_supplicant.conf
echo "update_config=1" >> /etc/wpa_supplicant/wpa_supplicant.conf

echo "-- Enabling Wheel Group --"
echo "%wheel ALL=(ALL) ALL" >> /etc/sudoers

echo "--Creating User--"
useradd -mg wheel "${USERNAME}"

EOF

# If statements are not read if EOF so we have to move outside to install
# correct grub configuration
# EOF need to be not indented on end/closing line otherwise it causes error
echo "--Installing Grub--"
if [ "$EFI" = true ]; then
	cat << EOF | arch-chroot /mnt
	grub-install --efi-directory=/boot
EOF
else
	cat << EOF | arch-chroot /mnt
	grub-install --target=i386-pc "${DISK}"
EOF
fi
grub-mkconfig -o /boot/grub/grub.cfg || echo "--Grub did not install correctly--"

echo "All Done Hopefully It Works"
echo "Remember to arch-chroot /mnt and set passwd for root and user"
